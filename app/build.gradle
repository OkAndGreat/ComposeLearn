plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.redrock.composelearn'
    compileSdk 33

    defaultConfig {
        applicationId "com.redrock.composelearn"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

/**
 * 使用Compose Bom物料清单
 * 借助 Compose 物料清单 (BoM)，您只需指定 BoM 的版本，即可管理所有 Compose 库版本。
 * BoM 本身包含指向不同 Compose 库的稳定版的链接，以便它们能够很好地协同工作。
 * 在应用中使用 BoM 时，您无需向 Compose 库依赖项本身添加任何版本。
 * 更新 BoM 版本时，您使用的所有库都会自动更新到新版本。
 *
 * 为什么建议使用 BoM 管理 Compose 库版本？
 * 今后，Compose 库将单独进行版本控制，这意味着版本号将开始按照自己的节奏递增。
 * 每个库的最新稳定版本已经过测试，并保证能够很好地协同工作。
 * 不过，找到每个库的最新稳定版本可能比较困难，而 BoM 会帮助您自动使用这些最新版本。
 * https://developer.android.com/jetpack/compose/setup?hl=zh-cn#using-the-bom
 */
dependencies {

    def composeBom = platform('androidx.compose:compose-bom:2022.10.00')
    implementation(composeBom)
    androidTestImplementation(composeBom)

    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.material:material"
    implementation "androidx.compose.material:material-icons-extended"
    implementation "androidx.compose.ui:ui-tooling-preview"
    debugImplementation "androidx.compose.ui:ui-tooling"
    implementation "androidx.compose.runtime:runtime-livedata"
    debugImplementation "androidx.compose.ui:ui-test-manifest"

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation 'androidx.compose.material:material:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.18.0"

    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.4.1"
}